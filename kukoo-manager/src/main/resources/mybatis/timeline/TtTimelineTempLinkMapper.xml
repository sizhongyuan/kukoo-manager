<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.timeline.dao.TLTempDao">

	<!--<select id="get" resultType="com.bootdo.oa.domain.NotifyDO">-->
		<!--select-->
		<!--`id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag`-->
		<!--from oa_notify where id = #{value}-->
	<!--</select>-->

	<select id="list" resultType="com.bootdo.timeline.domain.TtTimelineTempLink">
		select
		`id`,`project_id`,`link_name`,`link_limit`,`link_des`,`link_details`,`orderby`,`create_time`,`create_user_id`,`deleted`,`last_update_user_id`,`last_update_time`,`remark`
		from tt_timeline_temp_link
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="project_id != null and project_id != ''"> and project_id = #{projectId} </if>
			<if test="link_name != null and link_name != ''"> and link_name = #{linkName} </if>
			<if test="link_limit != null and link_limit != ''"> and link_limit = #{linkLimit} </if>
			<if test="link_des != null and link_des != ''"> and link_des = #{linkDes} </if>
			<if test="link_details != null and link_details != ''"> and link_details = #{linkDetails} </if>
			<if test="orderby != null and orderby != ''"> and orderby = #{orderby} </if>
			<if test="create_time != null and create_time != ''"> and create_time = #{createTime} </if>
			<if test="create_user_id != null and create_user_id != ''"> and create_user_id = #{createUserId} </if>
			<if test="deleted != null and deleted != ''"> and deleted = #{deleted} </if>
			<if test="last_update_user_id != null and last_update_user_id != ''"> and last_update_user_id = #{lastUpdateUserId} </if>
			<if test="last_update_time != null and last_update_time != ''"> and last_update_time = #{lastUpdateTime} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
			and deleted = 0
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from tt_timeline_temp_link
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="project_id != null and project_id != ''"> and project_id = #{projectId} </if>
			<if test="link_name != null and link_name != ''"> and link_name = #{linkName} </if>
			<if test="link_limit != null and link_limit != ''"> and link_limit = #{linkLimit} </if>
			<if test="link_des != null and link_des != ''"> and link_des = #{linkDes} </if>
			<if test="link_details != null and link_details != ''"> and link_details = #{linkDetails} </if>
			<if test="orderby != null and orderby != ''"> and orderby = #{orderby} </if>
			<if test="create_time != null and create_time != ''"> and create_time = #{createTime} </if>
			<if test="create_user_id != null and create_user_id != ''"> and create_user_id = #{createUserId} </if>
			<if test="deleted != null and deleted != ''"> and deleted = #{deleted} </if>
			<if test="last_update_user_id != null and last_update_user_id != ''"> and last_update_user_id = #{lastUpdateUserId} </if>
			<if test="last_update_time != null and last_update_time != ''"> and last_update_time = #{lastUpdateTime} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
			and deleted = 0
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.timeline.domain.TtTimelineTempLink"
		useGeneratedKeys="true" keyProperty="id">
		insert into tt_timeline_temp_link
		(
		`project_id`,
		`link_name`,
		`link_limit`,
		`link_des`,
		`link_details`,
		`orderby`,
		`create_time`,
		`create_user_id`,
		`remark`
		)
		values
		(
		#{projectId},
		#{linkName},
		#{linkLimit},
		#{linkDes},
		#{linkDetails},
		#{orderby},
		#{createTime},
		#{createUserId},
		#{remark}
		)
	</insert>

	<insert id="saveFile" parameterType="com.bootdo.timeline.domain.TtTimelineTempFile"
			useGeneratedKeys="true" keyProperty="id">
		insert into tt_timeline_temp_file
		(
		`temp_id`,
		`file_name`,
		`file_id`,
		`create_time`
		)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.tempId},
			#{item.fileName},
			#{item.fileId},
			#{item.createTime}
			)
		</foreach>
	</insert>

	<!--<update id="update" parameterType="com.bootdo.oa.domain.NotifyDO">-->
		<!--update oa_notify-->
		<!--<set>-->
			<!--<if test="type != null">`type` = #{type}, </if>-->
			<!--<if test="title != null">`title` = #{title}, </if>-->
			<!--<if test="content != null">`content` = #{content}, </if>-->
			<!--<if test="files != null">`files` = #{files}, </if>-->
			<!--<if test="status != null">`status` = #{status}, </if>-->
			<!--<if test="createBy != null">`create_by` = #{createBy}, </if>-->
			<!--<if test="createDate != null">`create_date` = #{createDate}, </if>-->
			<!--<if test="updateBy != null">`update_by` = #{updateBy}, </if>-->
			<!--<if test="updateDate != null">`update_date` = #{updateDate}, </if>-->
			<!--<if test="remarks != null">`remarks` = #{remarks}, </if>-->
			<!--<if test="delFlag != null">`del_flag` = #{delFlag}</if>-->
		<!--</set>-->
		<!--where id = #{id}-->
	<!--</update>-->

	<update id="remove" parameterType="com.bootdo.timeline.domain.TtTimelineTempLink">
		update tt_timeline_temp_link set deleted = 1 where id = #{id}
	</update>

	<update id="removeFile" parameterType="com.bootdo.timeline.domain.TtTimelineTempFile">
		update tt_timeline_temp_file set deleted = 1 where temp_id = #{id}
	</update>

	<update id="batchRemove" parameterType="com.bootdo.timeline.domain.TtTimelineTempLink">
		update tt_timeline_temp_link set deleted = 1 where id in
		<foreach item="id" collection="array" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</update>

	<update id="batchRemoveFile" parameterType="com.bootdo.timeline.domain.TtTimelineTempFile">
		update tt_timeline_temp_file set deleted = 1 where temp_id in
		<foreach item="id" collection="array" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</update>

	<!--<select id="listByIds" resultType="com.bootdo.oa.domain.NotifyDO">-->
		<!--select-->
		<!--`id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag`-->
		<!--from oa_notify where id in-->
		<!--<foreach item="id" collection="array" open="(" separator=","-->
			<!--close=")">-->
			<!--#{id}-->
		<!--</foreach>-->
	<!--</select>-->


	<!--<select id="countDTO" resultType="int">-->
		<!--select count(*)-->
		<!--from-->
		<!--oa_notify_record r right JOIN oa_notify n on r.notify_id-->
		<!--= n.id where-->
		<!--r.user_id =#{userId} and-->
		<!--r.is_read = #{isRead}-->
	<!--</select>-->

	<!--<select id="listDTO" resultType="com.bootdo.oa.domain.NotifyDTO">-->
		<!--select DISTINCT-->
		<!--n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag`-->
		<!--from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id-->
		<!--<where>-->
			<!--<if test="id != null and id != ''"> and r.id = #{id} </if>-->
			<!--<if test="notifyId != null and notifyId != ''"> and r.notify_id = #{notifyId} </if>-->
			<!--<if test="isRead != null and isRead != ''"> and r.is_read = #{isRead} </if>-->
			<!--<if test="userId != null and userId != ''"> and r.user_id = #{userId} </if>-->
			<!--<if test="readDate != null and readDate != ''"> and r.read_date = #{readDate} </if>-->
		<!--</where>-->
		<!--order by is_read ASC, update_date DESC-->
		<!--<if test="offset != null and limit != null">-->
			<!--limit #{offset}, #{limit}-->
		<!--</if>-->
		<!---->
	<!--</select>-->

</mapper>