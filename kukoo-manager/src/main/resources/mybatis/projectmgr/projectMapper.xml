<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.projectmgr.dao.ProjectDao">
    <resultMap id="BaseResultMap" type="com.bootdo.projectmgr.domain.ProjectDO" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="projectName" property="projectName" jdbcType="VARCHAR" />
        <result column="country" property="country" jdbcType="VARCHAR" />
        <result column="projectType" property="projectType" jdbcType="VARCHAR" />
        <result column="projectTypeOther" property="projectTypeOther" jdbcType="VARCHAR" />
        <result column="immigrationMode" property="immigrationMode" jdbcType="VARCHAR" />
        <result column="ifOpen" property="ifOpen" jdbcType="VARCHAR" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
        <result column="policyInterpretation" property="policyInterpretation" jdbcType="VARCHAR" />
        <result column="applicationProcess" property="applicationProcess" jdbcType="VARCHAR" />
        <result column="applicationRequirement" property="applicationRequirement" jdbcType="VARCHAR" />
        <result column="material" property="material" jdbcType="VARCHAR" />
        <result column="costDetail" property="costDetail" jdbcType="VARCHAR" />
        <result column="funding" property="funding" jdbcType="VARCHAR" />
        <result column="processingeriod" property="processingeriod" jdbcType="VARCHAR" />
        <result column="residenceRequirement" property="residenceRequirement" jdbcType="VARCHAR" />
        <result column="visaType" property="visaType" jdbcType="VARCHAR" />
        <result column="cicnews" property="cicnews" jdbcType="VARCHAR" />
        <result column="gradeUrl" property="gradeUrl" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="deleted" property="deleted" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
		id,
		createTime,
		projectName,
		country,
		projectType,
		projectTypeOther,
		immigrationMode,
		ifOpen,
		introduction,
		policyInterpretation,
		applicationProcess,
		applicationRequirement,
		material,
		costDetail,
		funding,
		processingeriod,
		residenceRequirement,
		visaType,
		cicnews,
		gradeUrl,
		remark,
		deleted
	</sql>
    <select id="get" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from project_detail where id = #{id}
	</select>

	<select id="list" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from project_detail
		<where>
			and deleted = '0'
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="projectName != null and projectName != ''">
				<bind name="projectNameLike" value="'%'+projectName+'%'"/>
			 	and projectName like #{projectNameLike}
			</if>
			<if test="country != null and country != ''"> and country = #{country} </if>
			<if test="immigrationMode != null and immigrationMode != ''"> and immigrationMode = #{immigrationMode} </if>
			<if test="ifOpen != null and ifOpen != ''"> and ifOpen = #{ifOpen} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by createTime desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from project_detail
		<where>
			and deleted = '0'
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="projectName != null and projectName != ''"> and projectName = #{projectName} </if>
			<if test="country != null and country != ''"> and country = #{country} </if>
			<if test="immigrationMode != null and immigrationMode != ''"> and immigrationMode = #{immigrationMode} </if>
			<if test="ifOpen != null and ifOpen != ''"> and ifOpen = #{ifOpen} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.projectmgr.domain.ProjectDO" keyProperty="id">
		insert into project_detail
		(
		id,
		createTime,
		projectName,
		country,
		projectType,
		projectTypeOther,
		immigrationMode,
		ifOpen,
		introduction,
		policyInterpretation,
		applicationProcess,
		applicationRequirement,
		material,
		costDetail,
		funding,
		processingeriod,
		residenceRequirement,
		visaType,
		cicnews,
		gradeUrl,
		remark,
		deleted
		)
		values
		(
		#{id},
		#{createTime},
		#{projectName},
		#{country},
		#{projectType},
		#{projectTypeOther},
		#{immigrationMode},
		#{ifOpen},
		#{introduction},
		#{policyInterpretation},
		#{applicationProcess},
		#{applicationRequirement},
		#{material},
		#{costDetail},
		#{funding},
		#{processingeriod},
		#{residenceRequirement},
		#{visaType},
		#{cicnews},
		#{gradeUrl},
		#{remark},
		#{deleted}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.projectmgr.domain.ProjectDO">
		update project_detail
		<set>
			<if test="projectName != null and projectName != ''"> projectName = #{projectName}, </if>
			<if test="country != null and country != ''"> country = #{country}, </if>
			<if test="projectType != null and projectType != ''"> projectType = #{projectType}, </if>
			<if test="projectTypeOther != null and projectTypeOther != ''"> projectTypeOther = #{projectTypeOther}, </if>
			<if test="immigrationMode != null and immigrationMode != ''"> immigrationMode = #{immigrationMode}, </if>
			<if test="ifOpen != null and ifOpen != ''"> ifOpen = #{ifOpen}, </if>
			<if test="introduction != null and introduction != ''"> introduction = #{introduction}, </if>
			<if test="policyInterpretation != null and policyInterpretation != ''"> policyInterpretation = #{policyInterpretation}, </if>
			<if test="applicationProcess != null and applicationProcess != ''"> applicationProcess = #{applicationProcess}, </if>
			<if test="applicationRequirement != null and applicationRequirement != ''"> applicationRequirement = #{applicationRequirement}, </if>
			<if test="material != null and material != ''"> material = #{material}, </if>
			<if test="costDetail != null and costDetail != ''"> costDetail = #{costDetail}, </if>
			<if test="funding != null and funding != ''"> funding = #{funding}, </if>
			<if test="processingeriod != null and processingeriod != ''"> processingeriod = #{processingeriod}, </if>
			<if test="residenceRequirement != null and residenceRequirement != ''"> residenceRequirement = #{residenceRequirement}, </if>
			<if test="visaType != null and visaType != ''"> visaType = #{visaType}, </if>
			<if test="cicnews != null and cicnews != ''"> cicnews = #{cicnews}, </if>
			<if test="gradeUrl != null and gradeUrl != ''"> gradeUrl = #{gradeUrl}, </if>
			<if test="remark != null and remark != ''"> remark = #{remark}, </if>
		</set>
		where id = #{id}
	</update>

	<delete id="remove" >
		update project_detail set deleted='1' where id = #{id}
	</delete>

	<delete id="batchRemove">
		update project_detail set deleted='1' where id in
		<foreach item="id" collection="array" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</delete>

	<select id="listByIds" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from project_detail where id in
		<foreach item="id" collection="array" open="(" separator=","
				 close=")">
			#{id}
		</foreach>
	</select>

	<select id="getSequence" resultType="int">
		SELECT func_nextval('project');
	</select>

</mapper>
<!--create table project_detail(
	id VARCHAR(10) PRIMARY key COMMENT '主键',
	createTime datetime,
	projectName VARCHAR(200),
	country VARCHAR(50),
	projectType VARCHAR(30),
	projectTypeOther VARCHAR(200),
	immigrationMode VARCHAR(50),
	ifOpen VARCHAR(20),
	introduction VARCHAR(2000),
	policyInterpretation VARCHAR(2000),
	applicationProcess VARCHAR(2000),
	applicationRequirement VARCHAR(2000),
	material VARCHAR(2000),
	costDetail VARCHAR(2000),
	funding VARCHAR(20),
	processingeriod VARCHAR(20),
	residenceRequirement VARCHAR(200),
	visaType VARCHAR(20),
	cicnews VARCHAR(200),
	gradeUrl VARCHAR(200),
	remark VARCHAR(500),
	deleted VARCHAR(10)
) -->